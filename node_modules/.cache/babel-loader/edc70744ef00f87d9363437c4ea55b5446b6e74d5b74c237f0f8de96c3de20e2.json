{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alina\\\\Desktop\\\\twitter\\\\twitter\\\\src\\\\Pages\\\\chat.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nconst Chat = () => {\n  _s();\n  var _users$find;\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [otherUserId, setOtherUserId] = useState(null);\n  const [chatStarted, setChatStarted] = useState(false);\n  const userToken = localStorage.getItem('token');\n  const userId = userToken ? parseJwt(userToken).id : null;\n  const roomId = otherUserId ? generateRoomId(userId, otherUserId) : null;\n  useEffect(() => {\n    if (!userId) return;\n    const fetchUsers = async (query = '') => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/posts/searchuser?q=${query}`, {\n          headers: {\n            'Authorization': ` ${localStorage.getItem(\"token\")}`\n          }\n        });\n        const data = await response.json();\n        // Ensure the response data is an array\n        if (Array.isArray(data)) {\n          setUsers(data);\n        } else {\n          console.error('Unexpected response format:', data);\n        }\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    };\n    fetchUsers(searchQuery);\n    if (roomId) {\n      socket.emit('joinRoom', {\n        roomId,\n        userId\n      });\n      socket.on('message', message => {\n        setMessages(prevMessages => [...prevMessages, message]);\n      });\n      return () => {\n        socket.off('message');\n      };\n    }\n  }, [roomId, userId, otherUserId, searchQuery]);\n  const sendMessage = () => {\n    if (message.trim() === '' || !roomId) return;\n    socket.emit('chatMessage', {\n      roomId,\n      message\n    });\n    setMessage('');\n  };\n  const handleSearchChange = e => {\n    setSearchQuery(e.target.value);\n  };\n  const handleUserSelect = userId => {\n    setOtherUserId(userId);\n  };\n  const startChat = () => {\n    setChatStarted(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: !chatStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.searchContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Search Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search users\",\n        value: searchQuery,\n        onChange: handleSearchChange,\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: styles.userList,\n        children: Array.isArray(users) && users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: styles.userItem,\n          onClick: () => {\n            handleUserSelect(user.id);\n            startChat();\n          },\n          children: [user.profilePic && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:5000/public/${user.profilePic}`,\n            alt: `${user.name}'s profile`,\n            style: styles.profilePic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 37\n          }, this), user.name]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.chatContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Chat with \", (_users$find = users.find(user => user.id === otherUserId)) === null || _users$find === void 0 ? void 0 : _users$find.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.messagesContainer,\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.message,\n          children: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.inputGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          style: styles.button,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n// Helper function to decode JWT token\n_s(Chat, \"0BTJo8E9CqvOnjPm3ltgKoCY3EI=\");\n_c = Chat;\nfunction parseJwt(token) {\n  if (!token) return {};\n  const base64Url = token.split('.')[1];\n  const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  const jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n  return JSON.parse(jsonPayload);\n}\nfunction generateRoomId(userId1, userId2) {\n  const sortedIds = [userId1, userId2].sort();\n  return `${sortedIds[0]}_${sortedIds[1]}`;\n}\nconst styles = {\n  container: {\n    padding: '20px'\n  },\n  searchContainer: {\n    maxWidth: '500px',\n    margin: '0 auto'\n  },\n  input: {\n    width: '100%',\n    padding: '10px',\n    borderRadius: '5px',\n    border: '1px solid #ccc',\n    marginBottom: '10px'\n  },\n  userList: {\n    listStyleType: 'none',\n    padding: '0'\n  },\n  userItem: {\n    padding: '10px',\n    borderBottom: '1px solid #ddd',\n    display: 'flex',\n    alignItems: 'center',\n    cursor: 'pointer'\n  },\n  profilePic: {\n    width: '40px',\n    height: '40px',\n    borderRadius: '50%',\n    marginRight: '10px'\n  },\n  chatContainer: {\n    maxWidth: '600px',\n    margin: '0 auto'\n  },\n  messagesContainer: {\n    height: '400px',\n    overflowY: 'scroll',\n    border: '1px solid #ddd',\n    borderRadius: '5px',\n    padding: '10px',\n    backgroundColor: '#f9f9f9',\n    marginBottom: '10px'\n  },\n  message: {\n    padding: '10px',\n    borderBottom: '1px solid #ddd',\n    borderRadius: '5px',\n    marginBottom: '5px',\n    backgroundColor: '#fff'\n  },\n  inputGroup: {\n    display: 'flex'\n  },\n  button: {\n    padding: '10px',\n    backgroundColor: '#007bff',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '5px',\n    cursor: 'pointer'\n  }\n};\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useEffect","useState","io","jsxDEV","_jsxDEV","socket","Chat","_s","_users$find","message","setMessage","messages","setMessages","users","setUsers","searchQuery","setSearchQuery","otherUserId","setOtherUserId","chatStarted","setChatStarted","userToken","localStorage","getItem","userId","parseJwt","id","roomId","generateRoomId","fetchUsers","query","response","fetch","headers","data","json","Array","isArray","console","error","emit","on","prevMessages","off","sendMessage","trim","handleSearchChange","e","target","value","handleUserSelect","startChat","style","styles","container","children","searchContainer","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","input","userList","map","user","userItem","onClick","profilePic","src","alt","name","chatContainer","find","messagesContainer","msg","index","inputGroup","button","_c","token","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","c","charCodeAt","toString","slice","join","JSON","parse","userId1","userId2","sortedIds","sort","padding","maxWidth","margin","width","borderRadius","border","marginBottom","listStyleType","borderBottom","display","alignItems","cursor","height","marginRight","overflowY","backgroundColor","color","$RefreshReg$"],"sources":["C:/Users/Alina/Desktop/twitter/twitter/src/Pages/chat.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst Chat = () => {\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [otherUserId, setOtherUserId] = useState(null);\r\n    const [chatStarted, setChatStarted] = useState(false);\r\n    const userToken = localStorage.getItem('token');\r\n    const userId = userToken ? parseJwt(userToken).id : null;\r\n    const roomId = otherUserId ? generateRoomId(userId, otherUserId) : null;\r\n\r\n    useEffect(() => {\r\n        if (!userId) return;\r\n\r\n        const fetchUsers = async (query = '') => {\r\n            try {\r\n                const response = await fetch(`http://localhost:5000/api/posts/searchuser?q=${query}`, {\r\n                    headers: { 'Authorization': ` ${localStorage.getItem(\"token\")}` }\r\n                });\r\n                const data = await response.json();\r\n                // Ensure the response data is an array\r\n                if (Array.isArray(data)) {\r\n                    setUsers(data);\r\n                } else {\r\n                    console.error('Unexpected response format:', data);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching users:', error);\r\n            }\r\n        };\r\n\r\n        fetchUsers(searchQuery);\r\n\r\n        if (roomId) {\r\n            socket.emit('joinRoom', { roomId, userId });\r\n            socket.on('message', (message) => {\r\n                setMessages((prevMessages) => [...prevMessages, message]);\r\n            });\r\n\r\n            return () => {\r\n                socket.off('message');\r\n            };\r\n        }\r\n    }, [roomId, userId, otherUserId, searchQuery]);\r\n\r\n    const sendMessage = () => {\r\n        if (message.trim() === '' || !roomId) return;\r\n\r\n        socket.emit('chatMessage', { roomId, message });\r\n        setMessage('');\r\n    };\r\n\r\n    const handleSearchChange = (e) => {\r\n        setSearchQuery(e.target.value);\r\n    };\r\n\r\n    const handleUserSelect = (userId) => {\r\n        setOtherUserId(userId);\r\n    };\r\n\r\n    const startChat = () => {\r\n        setChatStarted(true);\r\n    };\r\n\r\n    return (\r\n        <div style={styles.container}>\r\n            {!chatStarted ? (\r\n                <div style={styles.searchContainer}>\r\n                    <h3>Search Users</h3>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search users\"\r\n                        value={searchQuery}\r\n                        onChange={handleSearchChange}\r\n                        style={styles.input}\r\n                    />\r\n                    <ul style={styles.userList}>\r\n                        {Array.isArray(users) && users.map((user) => (\r\n                            <li\r\n                                key={user.id}\r\n                                style={styles.userItem}\r\n                                onClick={() => {\r\n                                    handleUserSelect(user.id);\r\n                                    startChat();\r\n                                }}\r\n                            >\r\n                                {user.profilePic && (\r\n                                    <img\r\n                                        src={`http://localhost:5000/public/${user.profilePic}`}\r\n                                        alt={`${user.name}'s profile`}\r\n                                        style={styles.profilePic}\r\n                                    />\r\n                                )}\r\n                                {user.name}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            ) : (\r\n                <div style={styles.chatContainer}>\r\n                    <h3>Chat with {users.find(user => user.id === otherUserId)?.name}</h3>\r\n                    <div style={styles.messagesContainer}>\r\n                        {messages.map((msg, index) => (\r\n                            <div key={index} style={styles.message}>\r\n                                {msg}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div style={styles.inputGroup}>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={message}\r\n                            onChange={(e) => setMessage(e.target.value)}\r\n                            style={styles.input}\r\n                        />\r\n                        <button onClick={sendMessage} style={styles.button}>\r\n                            Send\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n// Helper function to decode JWT token\r\nfunction parseJwt(token) {\r\n    if (!token) return {};\r\n    const base64Url = token.split('.')[1];\r\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n    const jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\r\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n    }).join(''));\r\n    return JSON.parse(jsonPayload);\r\n}\r\n\r\nfunction generateRoomId(userId1, userId2) {\r\n    const sortedIds = [userId1, userId2].sort();\r\n    return `${sortedIds[0]}_${sortedIds[1]}`;\r\n}\r\n\r\nconst styles = {\r\n    container: {\r\n        padding: '20px',\r\n    },\r\n    searchContainer: {\r\n        maxWidth: '500px',\r\n        margin: '0 auto',\r\n    },\r\n    input: {\r\n        width: '100%',\r\n        padding: '10px',\r\n        borderRadius: '5px',\r\n        border: '1px solid #ccc',\r\n        marginBottom: '10px',\r\n    },\r\n    userList: {\r\n        listStyleType: 'none',\r\n        padding: '0',\r\n    },\r\n    userItem: {\r\n        padding: '10px',\r\n        borderBottom: '1px solid #ddd',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        cursor: 'pointer',\r\n    },\r\n    profilePic: {\r\n        width: '40px',\r\n        height: '40px',\r\n        borderRadius: '50%',\r\n        marginRight: '10px',\r\n    },\r\n    chatContainer: {\r\n        maxWidth: '600px',\r\n        margin: '0 auto',\r\n    },\r\n    messagesContainer: {\r\n        height: '400px',\r\n        overflowY: 'scroll',\r\n        border: '1px solid #ddd',\r\n        borderRadius: '5px',\r\n        padding: '10px',\r\n        backgroundColor: '#f9f9f9',\r\n        marginBottom: '10px',\r\n    },\r\n    message: {\r\n        padding: '10px',\r\n        borderBottom: '1px solid #ddd',\r\n        borderRadius: '5px',\r\n        marginBottom: '5px',\r\n        backgroundColor: '#fff',\r\n    },\r\n    inputGroup: {\r\n        display: 'flex',\r\n    },\r\n    button: {\r\n        padding: '10px',\r\n        backgroundColor: '#007bff',\r\n        color: '#fff',\r\n        border: 'none',\r\n        borderRadius: '5px',\r\n        cursor: 'pointer',\r\n    },\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}