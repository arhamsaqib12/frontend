{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alina\\\\Desktop\\\\twitter\\\\twitter\\\\src\\\\Pages\\\\tweets.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Tweets.css'; // Import the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tweets = () => {\n  _s();\n  const [tweets, setTweets] = useState([]);\n  const [error, setError] = useState('');\n  const fetchTweets = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/posts', {\n        method: 'GET',\n        headers: {\n          'authorization': `${localStorage.getItem('token')}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Error fetching tweets: ${response.status}`);\n      }\n      const data = await response.json();\n      setTweets(data);\n    } catch (error) {\n      console.error('Error fetching tweets:', error);\n      setError(error.message);\n    }\n  };\n  useEffect(() => {\n    fetchTweets();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tweets-container\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"tweets-list\",\n      children: tweets.map(tweet => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"tweet\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweet-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:5000/public/${tweet.user.profilePic}`,\n            alt: \"User\",\n            className: \"profile-pic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"user-name\",\n              children: tweet.user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"user-handle\",\n              children: [\"@\", tweet.user.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tweet-timestamp\",\n              children: new Date(tweet.createdAt).toLocaleTimeString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweet-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"tweet-text\",\n            children: tweet.postText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), tweet.media && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tweet-media\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://localhost:5000/public/${tweet.media}`,\n              alt: \"Tweet Media\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, tweet.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Tweets, \"GpCxZzYL3xKG4IjeP+8/pYcaO38=\");\n_c = Tweets;\nexport default Tweets;\nvar _c;\n$RefreshReg$(_c, \"Tweets\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Tweets","_s","tweets","setTweets","error","setError","fetchTweets","response","fetch","method","headers","localStorage","getItem","ok","Error","status","data","json","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","tweet","src","user","profilePic","alt","name","username","Date","createdAt","toLocaleTimeString","postText","media","id","_c","$RefreshReg$"],"sources":["C:/Users/Alina/Desktop/twitter/twitter/src/Pages/tweets.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './Tweets.css'; // Import the CSS file for styling\r\n\r\nconst Tweets = () => {\r\n  const [tweets, setTweets] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  const fetchTweets = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/posts', {\r\n        method: 'GET',\r\n        headers: {\r\n          'authorization': `${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Error fetching tweets: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      setTweets(data);\r\n    } catch (error) {\r\n      console.error('Error fetching tweets:', error);\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTweets();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"tweets-container\">\r\n      {error && <p className=\"error\">Error: {error}</p>}\r\n      <ul className=\"tweets-list\">\r\n        {tweets.map((tweet) => (\r\n          <li key={tweet.id} className=\"tweet\">\r\n            <div className=\"tweet-header\">\r\n              <img src={`http://localhost:5000/public/${tweet.user.profilePic}`} alt=\"User\" className=\"profile-pic\" />\r\n              <div className=\"user-info\">\r\n                <span className=\"user-name\">{tweet.user.name}</span>\r\n                <span className=\"user-handle\">@{tweet.user.username}</span>\r\n                <span className=\"tweet-timestamp\">{new Date(tweet.createdAt).toLocaleTimeString()}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"tweet-body\">\r\n              <p className=\"tweet-text\">{tweet.postText}</p>\r\n              {tweet.media && (\r\n                <div className=\"tweet-media\">\r\n                  <img src={`http://localhost:5000/public/${tweet.media}`} alt=\"Tweet Media\" />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tweets;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}