{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alina\\\\Desktop\\\\twitter\\\\twitter\\\\src\\\\Pages\\\\Tweet.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css'; // Import Bootstrap Icons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SingleTweet = () => {\n  _s();\n  const {\n    tweetId\n  } = useParams(); // Get tweetId from URL parameters\n  const [tweet, setTweet] = useState(null);\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchTweet = async () => {\n      try {\n        const response = await fetch(`https://twit-backend-production.up.railway.app/api/posts/${tweetId}`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `${localStorage.getItem('token')}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`Error fetching tweet: ${response.status}`);\n        }\n        const data = await response.json();\n        setTweet(data);\n        fetchUser(data.userId); // Fetch the user data based on tweet's userId\n      } catch (error) {\n        console.error('Error fetching tweet:', error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    const fetchUser = async userId => {\n      try {\n        const response = await fetch(`https://twit-backend-production.up.railway.app/api/posts/tweet/${userId}`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `${localStorage.getItem('token')}`\n          }\n        });\n        if (response.ok) {\n          const userData = await response.json();\n          setUser(userData);\n        }\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    };\n    fetchTweet();\n  }, [tweetId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-info\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 45\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this), tweet && user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border border-secondary bg-black text-white p-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"py-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-secondary\",\n              children: [\"@\", user.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-muted\",\n              children: new Date(tweet.createdAt).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: tweet.postText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), tweet.media && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: tweet.media,\n            className: \"img-fluid\",\n            alt: \"Tweet Media\",\n            style: {\n              borderRadius: '20px' // Rounded corners\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(SingleTweet, \"NozPkxAwzL+/ernCxMODUeMAVI4=\", false, function () {\n  return [useParams];\n});\n_c = SingleTweet;\nexport default SingleTweet;\nvar _c;\n$RefreshReg$(_c, \"SingleTweet\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","SingleTweet","_s","tweetId","tweet","setTweet","user","setUser","error","setError","loading","setLoading","fetchTweet","response","fetch","method","headers","localStorage","getItem","ok","Error","status","data","json","fetchUser","userId","console","message","userData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","email","Date","createdAt","toLocaleString","postText","media","src","alt","style","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/Alina/Desktop/twitter/twitter/src/Pages/Tweet.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css'; // Import Bootstrap Icons\r\n\r\nconst SingleTweet = () => {\r\n  const { tweetId } = useParams(); // Get tweetId from URL parameters\r\n  const [tweet, setTweet] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchTweet = async () => {\r\n      try {\r\n        const response = await fetch(`https://twit-backend-production.up.railway.app/api/posts/${tweetId}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Error fetching tweet: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        setTweet(data);\r\n        fetchUser(data.userId); // Fetch the user data based on tweet's userId\r\n      } catch (error) {\r\n        console.error('Error fetching tweet:', error);\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    const fetchUser = async (userId) => {\r\n      try {\r\n        const response = await fetch(`https://twit-backend-production.up.railway.app/api/posts/tweet/${userId}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const userData = await response.json();\r\n          setUser(userData);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching user data:', error);\r\n      }\r\n    };\r\n\r\n    fetchTweet();\r\n  }, [tweetId]);\r\n\r\n  if (loading) {\r\n    return <div className=\"container-fluid\"><div className=\"alert alert-info\">Loading...</div></div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      {error && <div className=\"alert alert-danger\">Error: {error}</div>}\r\n      {tweet && user && (\r\n        <div className=\"border border-secondary bg-black text-white p-3\">\r\n          <div className=\"media\">\r\n            <div className=\"media-body\">\r\n              <h5 className=\"py-2\">\r\n                <span>{user.name}</span>\r\n                <small className=\"text-secondary\">@{user.email}</small>\r\n                <small className=\"text-muted\">{new Date(tweet.createdAt).toLocaleString()}</small>\r\n              </h5>\r\n              <p>{tweet.postText}</p>\r\n              {tweet.media && (\r\n                <img\r\n                  src={tweet.media}\r\n                  className=\"img-fluid\"\r\n                  alt=\"Tweet Media\"\r\n                  style={{\r\n                    borderRadius: '20px', // Rounded corners\r\n                  }}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleTweet;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,sCAAsC;AAC7C,OAAO,0CAA0C,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAQ,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAC;EACjC,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMgB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4DAA4DX,OAAO,EAAE,EAAE;UAClGY,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,eAAe,EAAE,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;UACnD;QACF,CAAC,CAAC;QAEF,IAAI,CAACL,QAAQ,CAACM,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyBP,QAAQ,CAACQ,MAAM,EAAE,CAAC;QAC7D;QAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QAClClB,QAAQ,CAACiB,IAAI,CAAC;QACdE,SAAS,CAACF,IAAI,CAACG,MAAM,CAAC,CAAC,CAAC;MAC1B,CAAC,CAAC,OAAOjB,KAAK,EAAE;QACdkB,OAAO,CAAClB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CC,QAAQ,CAACD,KAAK,CAACmB,OAAO,CAAC;MACzB,CAAC,SAAS;QACRhB,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAED,MAAMa,SAAS,GAAG,MAAOC,MAAM,IAAK;MAClC,IAAI;QACF,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,kEAAkEW,MAAM,EAAE,EAAE;UACvGV,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,eAAe,EAAE,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;UACnD;QACF,CAAC,CAAC;QAEF,IAAIL,QAAQ,CAACM,EAAE,EAAE;UACf,MAAMS,QAAQ,GAAG,MAAMf,QAAQ,CAACU,IAAI,CAAC,CAAC;UACtChB,OAAO,CAACqB,QAAQ,CAAC;QACnB;MACF,CAAC,CAAC,OAAOpB,KAAK,EAAE;QACdkB,OAAO,CAAClB,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDI,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACT,OAAO,CAAC,CAAC;EAEb,IAAIO,OAAO,EAAE;IACX,oBAAOV,OAAA;MAAK6B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAAC9B,OAAA;QAAK6B,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAClG;EAEA,oBACElC,OAAA;IAAK6B,SAAS,EAAC,iBAAiB;IAAAC,QAAA,GAC7BtB,KAAK,iBAAIR,OAAA;MAAK6B,SAAS,EAAC,oBAAoB;MAAAC,QAAA,GAAC,SAAO,EAACtB,KAAK;IAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACjE9B,KAAK,IAAIE,IAAI,iBACZN,OAAA;MAAK6B,SAAS,EAAC,iDAAiD;MAAAC,QAAA,eAC9D9B,OAAA;QAAK6B,SAAS,EAAC,OAAO;QAAAC,QAAA,eACpB9B,OAAA;UAAK6B,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzB9B,OAAA;YAAI6B,SAAS,EAAC,MAAM;YAAAC,QAAA,gBAClB9B,OAAA;cAAA8B,QAAA,EAAOxB,IAAI,CAAC6B;YAAI;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACxBlC,OAAA;cAAO6B,SAAS,EAAC,gBAAgB;cAAAC,QAAA,GAAC,GAAC,EAACxB,IAAI,CAAC8B,KAAK;YAAA;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACvDlC,OAAA;cAAO6B,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAE,IAAIO,IAAI,CAACjC,KAAK,CAACkC,SAAS,CAAC,CAACC,cAAc,CAAC;YAAC;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChF,CAAC,eACLlC,OAAA;YAAA8B,QAAA,EAAI1B,KAAK,CAACoC;UAAQ;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACtB9B,KAAK,CAACqC,KAAK,iBACVzC,OAAA;YACE0C,GAAG,EAAEtC,KAAK,CAACqC,KAAM;YACjBZ,SAAS,EAAC,WAAW;YACrBc,GAAG,EAAC,aAAa;YACjBC,KAAK,EAAE;cACLC,YAAY,EAAE,MAAM,CAAE;YACxB;UAAE;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACF;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChC,EAAA,CAtFID,WAAW;EAAA,QACKH,SAAS;AAAA;AAAAgD,EAAA,GADzB7C,WAAW;AAwFjB,eAAeA,WAAW;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}