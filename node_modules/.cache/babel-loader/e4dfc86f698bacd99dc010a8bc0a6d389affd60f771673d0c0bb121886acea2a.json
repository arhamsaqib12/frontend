{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alina\\\\Desktop\\\\twitter\\\\twitter\\\\src\\\\Pages\\\\thirdbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Explore() {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [users, setUsers] = useState([]);\n  const [tweets, setTweets] = useState([]);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate(); // Use useNavigate for navigation\n\n  const handleInputChange = e => {\n    setSearchQuery(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null); // Reset error state before making the request\n    try {\n      const response = await fetch(`http://localhost:5000/api/posts/search?q=${searchQuery}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `${localStorage.getItem('token')}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Search results:', data); // Log data for debugging\n        setUsers(data.users || []); // Set users to data.users if it exists\n        setTweets(data.tweets || []); // Set tweets to data.tweets if it exists\n        navigate('/explore', {\n          state: {\n            users: data.users,\n            tweets: data.tweets\n          }\n        }); // Navigate to explore with state\n      } else {\n        const errorText = await response.text();\n        console.error('Error submitting search query:', errorText);\n        setError('An error occurred while fetching the search results.');\n        setUsers([]); // Clear users on error\n        setTweets([]); // Clear tweets on error\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setError('An unexpected error occurred.');\n      setUsers([]); // Clear users on error\n      setTweets([]); // Clear tweets on error\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container g-0\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Explore, \"jsI5VHdJQsPbO1kgeq/jg7MvJCM=\", false, function () {\n  return [useNavigate];\n});\n_c = Explore;\nvar _c;\n$RefreshReg$(_c, \"Explore\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Explore","_s","searchQuery","setSearchQuery","users","setUsers","tweets","setTweets","error","setError","navigate","handleInputChange","e","target","value","handleSubmit","preventDefault","response","fetch","method","headers","localStorage","getItem","ok","data","json","console","log","state","errorText","text","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Alina/Desktop/twitter/twitter/src/Pages/thirdbar.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function Explore() {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [users, setUsers] = useState([]);\r\n  const [tweets, setTweets] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate(); // Use useNavigate for navigation\r\n\r\n  const handleInputChange = (e) => {\r\n    setSearchQuery(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(null); // Reset error state before making the request\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/posts/search?q=${searchQuery}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `${localStorage.getItem('token')}`\r\n        }\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('Search results:', data); // Log data for debugging\r\n        setUsers(data.users || []); // Set users to data.users if it exists\r\n        setTweets(data.tweets || []); // Set tweets to data.tweets if it exists\r\n        navigate('/explore', { state: { users: data.users, tweets: data.tweets } }); // Navigate to explore with state\r\n      } else {\r\n        const errorText = await response.text();\r\n        console.error('Error submitting search query:', errorText);\r\n        setError('An error occurred while fetching the search results.');\r\n        setUsers([]); // Clear users on error\r\n        setTweets([]); // Clear tweets on error\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setError('An unexpected error occurred.');\r\n      setUsers([]); // Clear users on error\r\n      setTweets([]); // Clear tweets on error\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container g-0\">\r\n   \r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMc,QAAQ,GAAGb,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMc,iBAAiB,GAAIC,CAAC,IAAK;IAC/BT,cAAc,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,CAAC,IAAK;IAChCA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClBP,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAChB,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4ChB,WAAW,EAAE,EAAE;QACtFiB,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACnD;MACF,CAAC,CAAC;MAEF,IAAIL,QAAQ,CAACM,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,IAAI,CAAC,CAAC,CAAC;QACtCnB,QAAQ,CAACmB,IAAI,CAACpB,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC;QAC5BG,SAAS,CAACiB,IAAI,CAAClB,MAAM,IAAI,EAAE,CAAC,CAAC,CAAC;QAC9BI,QAAQ,CAAC,UAAU,EAAE;UAAEkB,KAAK,EAAE;YAAExB,KAAK,EAAEoB,IAAI,CAACpB,KAAK;YAAEE,MAAM,EAAEkB,IAAI,CAAClB;UAAO;QAAE,CAAC,CAAC,CAAC,CAAC;MAC/E,CAAC,MAAM;QACL,MAAMuB,SAAS,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;QACvCJ,OAAO,CAAClB,KAAK,CAAC,gCAAgC,EAAEqB,SAAS,CAAC;QAC1DpB,QAAQ,CAAC,sDAAsD,CAAC;QAChEJ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;QACdE,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MACjB;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdkB,OAAO,CAAClB,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BC,QAAQ,CAAC,+BAA+B,CAAC;MACzCJ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;MACdE,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;IACjB;EACF,CAAC;EAED,oBACER,OAAA;IAAKgC,SAAS,EAAC;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEzB,CAAC;AAEV;AAAClC,EAAA,CAjDuBD,OAAO;EAAA,QAKZH,WAAW;AAAA;AAAAuC,EAAA,GALNpC,OAAO;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}