{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alina\\\\Desktop\\\\twitter\\\\twitter\\\\src\\\\Pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    fetchTweets();\n  }, []);\n  const fetchTweets = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/posts');\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setTweets(data); // Assuming data is an array of tweets\n    } catch (error) {\n      console.error('Error fetching tweets:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: tweets.map(tweet =>\n        /*#__PURE__*/\n        // <div key={tweet.id} className=\"card mb-3\">\n        //   <div className=\"card-body\">\n        //     <div className=\"d-flex align-items-center mb-3\">\n        //       <img\n        //         src={tweet.author} // Assuming tweet.author.avatar is the URL for author's avatar\n        //         alt=\"Avatar\"\n        //         className=\"rounded-circle me-3\"\n        //         width={50}\n        //         height={50}\n        //       />\n        //       <h5 className=\"card-title mb-0\">{tweet.author.username}</h5> {/* Username of the author */}\n        //       <span className=\"text-muted ms-2\">@{tweet.author.handle}</span> {/* Handle of the author */}\n        //     </div>\n        //     <p className=\"card-text\">{tweet.text}</p> {/* Content of the tweet */}\n        //     {tweet.media && (\n        //       <img\n        //         src={tweet.media} // Assuming tweet.media is the URL for media (image or video)\n        //         alt=\"Tweet Media\"\n        //         className=\"img-fluid rounded mb-3\"\n        //       />\n        //     )}\n        //     <div className=\"d-flex justify-content-between\">\n        //       <div>\n        //         <i className=\"bi bi-chat\"></i> {tweet.comments.length}\n        //       </div>\n        //       <div>\n        //         <i className=\"bi bi-heart\"></i> {tweet.likes}\n        //       </div>\n        //       <div>\n        //         <i className=\"bi bi-share\"></i> {tweet.shares}\n        //       </div>\n        //     </div>\n        //   </div>\n        // </div>\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: tweet.media,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"tlPhWtKxaAnAviYMgoNvFaAwXFo=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","tweets","setTweets","fetchTweets","response","fetch","ok","Error","status","data","json","error","console","className","children","map","tweet","src","media","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Alina/Desktop/twitter/twitter/src/Pages/Home.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\n\r\nexport default function Home() {\r\n  const [tweets, setTweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchTweets();\r\n  }, []);\r\n\r\n  const fetchTweets = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/posts');\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      setTweets(data); // Assuming data is an array of tweets\r\n    } catch (error) {\r\n      console.error('Error fetching tweets:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-8\">\r\n          {tweets.map(tweet => (\r\n            // <div key={tweet.id} className=\"card mb-3\">\r\n            //   <div className=\"card-body\">\r\n            //     <div className=\"d-flex align-items-center mb-3\">\r\n            //       <img\r\n            //         src={tweet.author} // Assuming tweet.author.avatar is the URL for author's avatar\r\n            //         alt=\"Avatar\"\r\n            //         className=\"rounded-circle me-3\"\r\n            //         width={50}\r\n            //         height={50}\r\n            //       />\r\n            //       <h5 className=\"card-title mb-0\">{tweet.author.username}</h5> {/* Username of the author */}\r\n            //       <span className=\"text-muted ms-2\">@{tweet.author.handle}</span> {/* Handle of the author */}\r\n            //     </div>\r\n            //     <p className=\"card-text\">{tweet.text}</p> {/* Content of the tweet */}\r\n            //     {tweet.media && (\r\n            //       <img\r\n            //         src={tweet.media} // Assuming tweet.media is the URL for media (image or video)\r\n            //         alt=\"Tweet Media\"\r\n            //         className=\"img-fluid rounded mb-3\"\r\n            //       />\r\n            //     )}\r\n            //     <div className=\"d-flex justify-content-between\">\r\n            //       <div>\r\n            //         <i className=\"bi bi-chat\"></i> {tweet.comments.length}\r\n            //       </div>\r\n            //       <div>\r\n            //         <i className=\"bi bi-heart\"></i> {tweet.likes}\r\n            //       </div>\r\n            //       <div>\r\n            //         <i className=\"bi bi-share\"></i> {tweet.shares}\r\n            //       </div>\r\n            //     </div>\r\n            //   </div>\r\n            // </div>\r\n            <>\r\n            \r\n            <img src={tweet.media} alt=\"\" />\r\n            \r\n\r\n          <div>\r\n          {}\r\n          </div>\r\n            \r\n            </>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,0CAA0C;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdS,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;MAC/D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC3D;MACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCR,SAAS,CAACO,IAAI,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,oBACEf,OAAA;IAAKiB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7BlB,OAAA;MAAKiB,SAAS,EAAC,4BAA4B;MAAAC,QAAA,eACzClB,OAAA;QAAKiB,SAAS,EAAC,UAAU;QAAAC,QAAA,EACtBb,MAAM,CAACc,GAAG,CAACC,KAAK;QAAA;QACf;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACApB,OAAA,CAAAE,SAAA;UAAAgB,QAAA,gBAEAlB,OAAA;YAAKqB,GAAG,EAAED,KAAK,CAACE,KAAM;YAACC,GAAG,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAGlC3B,OAAA;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEK,CAAC;QAAA,eAEF,CACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACvB,EAAA,CA1EuBD,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}