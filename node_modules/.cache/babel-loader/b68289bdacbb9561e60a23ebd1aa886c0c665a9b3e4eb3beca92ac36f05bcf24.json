{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alina\\\\Desktop\\\\twitter\\\\twitter\\\\src\\\\Pages\\\\tweets.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css'; // Import Bootstrap Icons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tweets = () => {\n  _s();\n  const [tweets, setTweets] = useState([]);\n  const [users, setUsers] = useState({});\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [likedTweets, setLikedTweets] = useState({}); // Track liked tweets\n  const [comments, setComments] = useState({}); // Track comments\n  const [commentInput, setCommentInput] = useState(''); // Input field for comments\n\n  // Fetch tweets\n  const fetchTweets = async () => {\n    try {\n      const response = await fetch('https://twit-backend-production.up.railway.app/api/posts', {\n        method: 'GET',\n        headers: {\n          'Authorization': `${localStorage.getItem('token')}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Error fetching tweets: ${response.status}`);\n      }\n      const data = await response.json();\n      setTweets(data);\n      fetchUsers(data);\n      initializeLikedTweets(data); // Initialize liked tweets\n      initializeComments(data); // Initialize comments\n    } catch (error) {\n      console.error('Error fetching tweets:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch users\n  const fetchUsers = async tweets => {\n    const userIds = [...new Set(tweets.map(tweet => tweet.userId))];\n    userIds.forEach(async userId => {\n      if (!users[userId]) {\n        try {\n          const userResponse = await fetch(`https://twit-backend-production.up.railway.app/api/posts/user/${userId}`, {\n            method: 'GET',\n            headers: {\n              'Authorization': `${localStorage.getItem('token')}`\n            }\n          });\n          if (userResponse.ok) {\n            const userData = await userResponse.json();\n            setUsers(prevUsers => ({\n              ...prevUsers,\n              [userId]: userData\n            }));\n          }\n        } catch (error) {\n          console.error('Error fetching user data:', error);\n        }\n      }\n    });\n  };\n\n  // Initialize liked tweets from localStorage\n  const initializeLikedTweets = tweets => {\n    const storedLikes = JSON.parse(localStorage.getItem('likedTweets')) || {};\n    const likes = {};\n    tweets.forEach(tweet => {\n      likes[tweet.id] = storedLikes[tweet.id] || false;\n    });\n    setLikedTweets(likes);\n  };\n\n  // Initialize comments\n  const initializeComments = tweets => {\n    const storedComments = JSON.parse(localStorage.getItem('comments')) || {};\n    const tweetComments = {};\n    tweets.forEach(tweet => {\n      tweetComments[tweet.id] = storedComments[tweet.id] || [];\n    });\n    setComments(tweetComments);\n  };\n\n  // Handle comment submission\n  const handleCommentSubmit = async tweetId => {\n    const newComment = commentInput.trim();\n    if (newComment) {\n      try {\n        const response = await fetch('https://twit-backend-production.up.railway.app/api/posts/comment', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `${localStorage.getItem('token')}`\n          },\n          body: JSON.stringify({\n            tweetId,\n            comment: newComment\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Failed to add comment');\n        }\n        const updatedComments = {\n          ...comments\n        };\n        updatedComments[tweetId] = [...(updatedComments[tweetId] || []), newComment];\n        setComments(updatedComments);\n\n        // Update localStorage\n        localStorage.setItem('comments', JSON.stringify(updatedComments));\n\n        // Clear input field\n        setCommentInput('');\n      } catch (error) {\n        console.error('Error adding comment:', error);\n      }\n    }\n  };\n\n  // Handle like/unlike\n  const toggleLike = async postId => {\n    const isLiked = likedTweets[postId];\n    try {\n      const response = await fetch(`https://twit-backend-production.up.railway.app/api/posts/like`, {\n        method: isLiked ? 'DELETE' : 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          postId\n        })\n      });\n      if (!response.ok) {\n        throw new Error(isLiked ? 'Failed to unlike tweet' : 'Failed to like tweet');\n      }\n      const updatedLikes = {\n        ...likedTweets,\n        [postId]: !isLiked\n      };\n      setLikedTweets(updatedLikes);\n\n      // Update localStorage\n      localStorage.setItem('likedTweets', JSON.stringify(updatedLikes));\n\n      // Refresh tweets to update like count\n      fetchTweets();\n    } catch (error) {\n      console.error(isLiked ? 'Error unliking tweet:' : 'Error liking tweet:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTweets();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-info\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 45\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid g-0 m-0 p-0 b-0\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"p-0\",\n      children: tweets.map(tweet => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"border border-secondary bg-black text-white list-unstyled pb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media-body\",\n            children: [users[tweet.userId] && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"py-2 ps-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: users[tweet.userId].profilePic,\n                  alt: \"Profile\",\n                  className: \"rounded-circle\",\n                  style: {\n                    width: '40px',\n                    height: '40px',\n                    marginRight: '10px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/profile/${users[tweet.userId].id}`,\n                  children: [\" \", users[tweet.userId].name, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-secondary\",\n                  children: [\"@\", users[tweet.userId].email]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-muted\",\n                  children: new Date(tweet.createdAt).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"ps-3 fw-light\",\n              children: tweet.postText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), tweet.media && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: tweet.media,\n              className: \"ps-5 pe-5\",\n              alt: \"Tweet Media\",\n              style: {\n                width: '100%',\n                height: 'auto',\n                borderRadius: '20px' // Rounded corners\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ps-3 pt-2 d-flex align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: `btn btn-lg ${likedTweets[tweet.id] ? 'text-danger' : 'text-light'}`,\n                onClick: () => toggleLike(tweet.id),\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: `bi ${likedTweets[tweet.id] ? 'bi-heart-fill text-danger' : 'bi-heart'}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 21\n                }, this), \" \", tweet.likesCount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ms-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: commentInput,\n                  onChange: e => setCommentInput(e.target.value),\n                  placeholder: \"Add a comment\",\n                  className: \"form-control form-control-sm me-2\",\n                  style: {\n                    maxWidth: '200px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `btn btn-sm ${commentInput ? 'btn-primary' : 'btn-secondary'}`,\n                  onClick: () => handleCommentSubmit(tweet.id),\n                  disabled: !commentInput,\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-chat\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)\n      }, tweet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(Tweets, \"a9PCRC4XMOUX18a7e8lcORKFe8c=\");\n_c = Tweets;\nexport default Tweets;\nvar _c;\n$RefreshReg$(_c, \"Tweets\");","map":{"version":3,"names":["React","useEffect","useState","Link","jsxDEV","_jsxDEV","Tweets","_s","tweets","setTweets","users","setUsers","error","setError","loading","setLoading","likedTweets","setLikedTweets","comments","setComments","commentInput","setCommentInput","fetchTweets","response","fetch","method","headers","localStorage","getItem","ok","Error","status","data","json","fetchUsers","initializeLikedTweets","initializeComments","console","message","userIds","Set","map","tweet","userId","forEach","userResponse","userData","prevUsers","storedLikes","JSON","parse","likes","id","storedComments","tweetComments","handleCommentSubmit","tweetId","newComment","trim","body","stringify","comment","updatedComments","setItem","toggleLike","postId","isLiked","updatedLikes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","profilePic","alt","style","width","height","marginRight","to","name","email","Date","createdAt","toLocaleString","postText","media","borderRadius","onClick","likesCount","type","value","onChange","e","target","placeholder","maxWidth","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Alina/Desktop/twitter/twitter/src/Pages/tweets.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css'; // Import Bootstrap Icons\r\n\r\nconst Tweets = () => {\r\n  const [tweets, setTweets] = useState([]);\r\n  const [users, setUsers] = useState({});\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [likedTweets, setLikedTweets] = useState({}); // Track liked tweets\r\n  const [comments, setComments] = useState({}); // Track comments\r\n  const [commentInput, setCommentInput] = useState(''); // Input field for comments\r\n\r\n  // Fetch tweets\r\n  const fetchTweets = async () => {\r\n    try {\r\n      const response = await fetch('https://twit-backend-production.up.railway.app/api/posts', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Error fetching tweets: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      setTweets(data);\r\n      fetchUsers(data);\r\n      initializeLikedTweets(data); // Initialize liked tweets\r\n      initializeComments(data); // Initialize comments\r\n    } catch (error) {\r\n      console.error('Error fetching tweets:', error);\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch users\r\n  const fetchUsers = async (tweets) => {\r\n    const userIds = [...new Set(tweets.map(tweet => tweet.userId))];\r\n    userIds.forEach(async (userId) => {\r\n      if (!users[userId]) {\r\n        try {\r\n          const userResponse = await fetch(`https://twit-backend-production.up.railway.app/api/posts/user/${userId}`, {\r\n            method: 'GET',\r\n            headers: {\r\n              'Authorization': `${localStorage.getItem('token')}`,\r\n            },\r\n          });\r\n\r\n          if (userResponse.ok) {\r\n            const userData = await userResponse.json();\r\n            setUsers((prevUsers) => ({ ...prevUsers, [userId]: userData }));\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching user data:', error);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // Initialize liked tweets from localStorage\r\n  const initializeLikedTweets = (tweets) => {\r\n    const storedLikes = JSON.parse(localStorage.getItem('likedTweets')) || {};\r\n    const likes = {};\r\n    tweets.forEach(tweet => {\r\n      likes[tweet.id] = storedLikes[tweet.id] || false;\r\n    });\r\n    setLikedTweets(likes);\r\n  };\r\n\r\n  // Initialize comments\r\n  const initializeComments = (tweets) => {\r\n    const storedComments = JSON.parse(localStorage.getItem('comments')) || {};\r\n    const tweetComments = {};\r\n    tweets.forEach(tweet => {\r\n      tweetComments[tweet.id] = storedComments[tweet.id] || [];\r\n    });\r\n    setComments(tweetComments);\r\n  };\r\n\r\n  // Handle comment submission\r\n  const handleCommentSubmit = async (tweetId) => {\r\n    const newComment = commentInput.trim();\r\n    if (newComment) {\r\n      try {\r\n        const response = await fetch('https://twit-backend-production.up.railway.app/api/posts/comment', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `${localStorage.getItem('token')}`,\r\n          },\r\n          body: JSON.stringify({ tweetId, comment: newComment }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Failed to add comment');\r\n        }\r\n\r\n        const updatedComments = { ...comments };\r\n        updatedComments[tweetId] = [...(updatedComments[tweetId] || []), newComment];\r\n        setComments(updatedComments);\r\n\r\n        // Update localStorage\r\n        localStorage.setItem('comments', JSON.stringify(updatedComments));\r\n\r\n        // Clear input field\r\n        setCommentInput('');\r\n      } catch (error) {\r\n        console.error('Error adding comment:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle like/unlike\r\n  const toggleLike = async (postId) => {\r\n    const isLiked = likedTweets[postId];\r\n\r\n    try {\r\n      const response = await fetch(`https://twit-backend-production.up.railway.app/api/posts/like`, {\r\n        method: isLiked ? 'DELETE' : 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `${localStorage.getItem('token')}`,\r\n        },\r\n        body: JSON.stringify({ postId }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(isLiked ? 'Failed to unlike tweet' : 'Failed to like tweet');\r\n      }\r\n\r\n      const updatedLikes = {\r\n        ...likedTweets,\r\n        [postId]: !isLiked,\r\n      };\r\n\r\n      setLikedTweets(updatedLikes);\r\n\r\n      // Update localStorage\r\n      localStorage.setItem('likedTweets', JSON.stringify(updatedLikes));\r\n\r\n      // Refresh tweets to update like count\r\n      fetchTweets();\r\n    } catch (error) {\r\n      console.error(isLiked ? 'Error unliking tweet:' : 'Error liking tweet:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTweets();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div className=\"container-fluid\"><div className=\"alert alert-info\">Loading...</div></div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid g-0 m-0 p-0 b-0\">\r\n      {error && <div className=\"alert alert-danger\">Error: {error}</div>}\r\n      <ul className=\"p-0\">\r\n        {tweets.map((tweet) => (\r\n          <li key={tweet.id} className=\"border border-secondary bg-black text-white list-unstyled pb-3\">\r\n            <div className=\"media\">\r\n              <div className=\"media-body\">\r\n                {users[tweet.userId] && (\r\n                  <span>\r\n                    <h5 className=\"py-2 ps-3\">\r\n                      <img\r\n                        src={users[tweet.userId].profilePic}\r\n                        alt=\"Profile\"\r\n                        className=\"rounded-circle\"\r\n                        style={{ width: '40px', height: '40px', marginRight: '10px' }}\r\n                      />\r\n                      <Link to={`/profile/${users[tweet.userId].id}`}> {users[tweet.userId].name} </Link>\r\n                      <small className=\"text-secondary\">@{users[tweet.userId].email}</small>\r\n                      <small className=\"text-muted\">{new Date(tweet.createdAt).toLocaleString()}</small>\r\n                    </h5>\r\n                  </span>\r\n                )}\r\n                <h5 className=\"ps-3 fw-light\">{tweet.postText}</h5>\r\n                {tweet.media && (\r\n                  <img\r\n                    src={tweet.media}\r\n                    className=\"ps-5 pe-5\"\r\n                    alt=\"Tweet Media\"\r\n                    style={{\r\n                      width: '100%',\r\n                      height: 'auto',\r\n                      borderRadius: '20px' // Rounded corners\r\n                    }}\r\n                  />\r\n                )}\r\n                <div className=\"ps-3 pt-2 d-flex align-items-center\">\r\n                  <button\r\n                    className={`btn btn-lg ${likedTweets[tweet.id] ? 'text-danger' : 'text-light'}`}\r\n                    onClick={() => toggleLike(tweet.id)}\r\n                  >\r\n                    <i className={`bi ${likedTweets[tweet.id] ? 'bi-heart-fill text-danger' : 'bi-heart'}`}></i> {tweet.likesCount}\r\n                  </button>\r\n                  <div className=\"ms-3\">\r\n                    <input\r\n                      type=\"text\"\r\n                      value={commentInput}\r\n                      onChange={(e) => setCommentInput(e.target.value)}\r\n                      placeholder=\"Add a comment\"\r\n                      className=\"form-control form-control-sm me-2\"\r\n                      style={{ maxWidth: '200px' }}\r\n                    />\r\n                    <button\r\n                      className={`btn btn-sm ${commentInput ? 'btn-primary' : 'btn-secondary'}`}\r\n                      onClick={() => handleCommentSubmit(tweet.id)}\r\n                      disabled={!commentInput}\r\n                    >\r\n                      <i className=\"bi bi-chat\"></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tweets;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}