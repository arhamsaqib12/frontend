{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alina\\\\Desktop\\\\twitter\\\\twitter\\\\src\\\\Pages\\\\tweets.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css'; // Import Bootstrap Icons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tweets = () => {\n  _s();\n  const [tweets, setTweets] = useState([]);\n  const [users, setUsers] = useState({});\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [likedTweets, setLikedTweets] = useState({}); // Track liked tweets\n\n  // Fetch tweets\n  const fetchTweets = async () => {\n    try {\n      const response = await fetch('https://twit-backend-production.up.railway.app/api/posts', {\n        method: 'GET',\n        headers: {\n          'Authorization': `${localStorage.getItem('token')}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Error fetching tweets: ${response.status}`);\n      }\n      const data = await response.json();\n      setTweets(data);\n      fetchUsers(data);\n      initializeLikedTweets(data); // Initialize liked tweets\n    } catch (error) {\n      console.error('Error fetching tweets:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch users\n  const fetchUsers = async tweets => {\n    const userIds = [...new Set(tweets.map(tweet => tweet.userId))];\n    userIds.forEach(async userId => {\n      if (!users[userId]) {\n        try {\n          const userResponse = await fetch(`https://twit-backend-production.up.railway.app/api/posts/user/${userId}`, {\n            method: 'GET',\n            headers: {\n              'Authorization': `${localStorage.getItem('token')}`\n            }\n          });\n          if (userResponse.ok) {\n            const userData = await userResponse.json();\n            setUsers(prevUsers => ({\n              ...prevUsers,\n              [userId]: userData\n            }));\n          }\n        } catch (error) {\n          console.error('Error fetching user data:', error);\n        }\n      }\n    });\n  };\n\n  // Initialize liked tweets from localStorage\n  const initializeLikedTweets = tweets => {\n    const storedLikes = JSON.parse(localStorage.getItem('likedTweets')) || {};\n    const likes = {};\n    tweets.forEach(tweet => {\n      likes[tweet.id] = storedLikes[tweet.id] || false;\n    });\n    setLikedTweets(likes);\n  };\n\n  // Handle like/unlike\n  const toggleLike = async postId => {\n    const isLiked = likedTweets[postId];\n    try {\n      const response = await fetch(`https://twit-backend-production.up.railway.app/api/posts/like`, {\n        method: isLiked ? 'DELETE' : 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          postId\n        })\n      });\n      if (!response.ok) {\n        throw new Error(isLiked ? 'Failed to unlike tweet' : 'Failed to like tweet');\n      }\n      const updatedLikes = {\n        ...likedTweets,\n        [postId]: !isLiked\n      };\n      setLikedTweets(updatedLikes);\n\n      // Update localStorage\n      localStorage.setItem('likedTweets', JSON.stringify(updatedLikes));\n\n      // Refresh tweets to update like count\n      fetchTweets();\n    } catch (error) {\n      console.error(isLiked ? 'Error unliking tweet:' : 'Error liking tweet:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTweets();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-info\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 45\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid g-0 m-0 p-0 b-0\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"p-0\",\n      children: tweets.map(tweet => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"border border-secondary bg-black text-white list-unstyled pb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media-body\",\n            children: [users[tweet.userId] && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"py-2 ps-3\",\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  children: [\" \", users[tweet.userId].name, ' ']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this), \"    \", users[tweet.userId].name, ' ', /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-secondary\",\n                  children: [\"@\", users[tweet.userId].email]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-muted\",\n                  children: new Date(tweet.createdAt).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"ps-3 fw-light\",\n              children: tweet.postText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), tweet.media && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: tweet.media,\n              className: \"ps-5 pe-5\",\n              alt: \"Tweet Media\",\n              style: {\n                width: '100%',\n                // Set a max-width for responsiveness\n                height: 'auto',\n                borderRadius: '20px' // Rounded square border\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ps-3 pt-2\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `btn btn-lg ${likedTweets[tweet.id] ? 'text-danger' : 'text-light'}`,\n                onClick: () => toggleLike(tweet.id),\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: `bi ${likedTweets[tweet.id] ? 'bi-heart-fill text-danger' : 'bi-heart'}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 21\n                }, this), \" \", tweet.likesCount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)\n      }, tweet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(Tweets, \"mTaS0zSLfLwxeCXpVtGmKw0aN54=\");\n_c = Tweets;\nexport default Tweets;\nvar _c;\n$RefreshReg$(_c, \"Tweets\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Tweets","_s","tweets","setTweets","users","setUsers","error","setError","loading","setLoading","likedTweets","setLikedTweets","fetchTweets","response","fetch","method","headers","localStorage","getItem","ok","Error","status","data","json","fetchUsers","initializeLikedTweets","console","message","userIds","Set","map","tweet","userId","forEach","userResponse","userData","prevUsers","storedLikes","JSON","parse","likes","id","toggleLike","postId","isLiked","body","stringify","updatedLikes","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Link","name","email","Date","createdAt","toLocaleString","postText","media","src","alt","style","width","height","borderRadius","onClick","likesCount","_c","$RefreshReg$"],"sources":["C:/Users/Alina/Desktop/twitter/twitter/src/Pages/tweets.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css'; // Import Bootstrap Icons\r\n\r\nconst Tweets = () => {\r\n  const [tweets, setTweets] = useState([]);\r\n  const [users, setUsers] = useState({});\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [likedTweets, setLikedTweets] = useState({}); // Track liked tweets\r\n\r\n  // Fetch tweets\r\n  const fetchTweets = async () => {\r\n    try {\r\n      const response = await fetch('https://twit-backend-production.up.railway.app/api/posts', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Error fetching tweets: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      setTweets(data);\r\n      fetchUsers(data);\r\n      initializeLikedTweets(data); // Initialize liked tweets\r\n    } catch (error) {\r\n      console.error('Error fetching tweets:', error);\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch users\r\n  const fetchUsers = async (tweets) => {\r\n    const userIds = [...new Set(tweets.map(tweet => tweet.userId))];\r\n    userIds.forEach(async (userId) => {\r\n      if (!users[userId]) {\r\n        try {\r\n          const userResponse = await fetch(`https://twit-backend-production.up.railway.app/api/posts/user/${userId}`, {\r\n            method: 'GET',\r\n            headers: {\r\n              'Authorization': `${localStorage.getItem('token')}`,\r\n            },\r\n          });\r\n\r\n          if (userResponse.ok) {\r\n            const userData = await userResponse.json();\r\n            setUsers((prevUsers) => ({ ...prevUsers, [userId]: userData }));\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching user data:', error);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // Initialize liked tweets from localStorage\r\n  const initializeLikedTweets = (tweets) => {\r\n    const storedLikes = JSON.parse(localStorage.getItem('likedTweets')) || {};\r\n    const likes = {};\r\n    tweets.forEach(tweet => {\r\n      likes[tweet.id] = storedLikes[tweet.id] || false;\r\n    });\r\n    setLikedTweets(likes);\r\n  };\r\n\r\n  // Handle like/unlike\r\n  const toggleLike = async (postId) => {\r\n    const isLiked = likedTweets[postId];\r\n\r\n    try {\r\n      const response = await fetch(`https://twit-backend-production.up.railway.app/api/posts/like`, {\r\n        method: isLiked ? 'DELETE' : 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `${localStorage.getItem('token')}`,\r\n        },\r\n        body: JSON.stringify({ postId }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(isLiked ? 'Failed to unlike tweet' : 'Failed to like tweet');\r\n      }\r\n\r\n      const updatedLikes = {\r\n        ...likedTweets,\r\n        [postId]: !isLiked,\r\n      };\r\n\r\n      setLikedTweets(updatedLikes);\r\n\r\n      // Update localStorage\r\n      localStorage.setItem('likedTweets', JSON.stringify(updatedLikes));\r\n\r\n      // Refresh tweets to update like count\r\n      fetchTweets();\r\n    } catch (error) {\r\n      console.error(isLiked ? 'Error unliking tweet:' : 'Error liking tweet:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTweets();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div className=\"container-fluid\"><div className=\"alert alert-info\">Loading...</div></div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid g-0 m-0 p-0 b-0\">\r\n      {error && <div className=\"alert alert-danger\">Error: {error}</div>}\r\n      <ul className=\"p-0\">\r\n        {tweets.map((tweet) => (\r\n          <li key={tweet.id} className=\"border border-secondary bg-black text-white list-unstyled pb-3\">\r\n            <div className=\"media\">\r\n              <div className=\"media-body\">\r\n                {users[tweet.userId] && (\r\n                  <span>\r\n                    <h5 className=\"py-2 ps-3\">\r\n                    <Link> {users[tweet.userId].name}{' '}</Link>    {users[tweet.userId].name}{' '}\r\n                      <small className=\"text-secondary\">@{users[tweet.userId].email}</small>\r\n                      <small className=\"text-muted\">{new Date(tweet.createdAt).toLocaleString()}</small>\r\n                    </h5>\r\n                  </span>\r\n                )}\r\n                <h5 className=\"ps-3 fw-light\">{tweet.postText}</h5>\r\n                {tweet.media && (\r\n                  <img\r\n                    src={tweet.media}\r\n                    className=\"ps-5 pe-5\"\r\n                    alt=\"Tweet Media\"\r\n                    style={{\r\n                      width: '100%',\r\n                       // Set a max-width for responsiveness\r\n                      height: 'auto',\r\n                      borderRadius: '20px' // Rounded square border\r\n                    }}\r\n                  />\r\n                )}\r\n                <div className=\"ps-3 pt-2\">\r\n                  <button\r\n                    className={`btn btn-lg ${likedTweets[tweet.id] ? 'text-danger' : 'text-light'}`}\r\n                    onClick={() => toggleLike(tweet.id)}\r\n                  >\r\n                    <i className={`bi ${likedTweets[tweet.id] ? 'bi-heart-fill text-danger' : 'bi-heart'}`}></i> {tweet.likesCount}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tweets;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}