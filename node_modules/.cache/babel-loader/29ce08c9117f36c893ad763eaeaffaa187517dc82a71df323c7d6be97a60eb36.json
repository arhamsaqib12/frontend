{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alina\\\\Desktop\\\\twitter\\\\twitter\\\\src\\\\Pages\\\\profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const {\n    userId\n  } = useParams(); // Get user ID from URL params\n  const [user, setUser] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchUserAndPosts = async () => {\n      try {\n        const token = localStorage.getItem('token'); // Get token from local storage\n\n        // Fetch user details\n        const userResponse = await fetch(`http://localhost:5000/api/user/${userId}`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `${token}`,\n            // Include token in request headers\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!userResponse.ok) {\n          throw new Error('Failed to fetch user details');\n        }\n        const userData = await userResponse.json();\n        setUser(userData);\n\n        // Fetch user's posts\n        const postsResponse = await fetch(`http://localhost:5000/api/posts/${userId}`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `${token}`,\n            // Include token in request headers\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!postsResponse.ok) {\n          throw new Error('Failed to fetch posts');\n        }\n        const postsData = await postsResponse.json();\n        setPosts(postsData);\n      } catch (err) {\n        setError(err.message);\n      }\n    };\n    fetchUserAndPosts();\n  }, [userId]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: user && /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n              className: \"mb-2 text-muted\",\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              children: \"Follow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mb-3\",\n          children: [post.media && /*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: `http://localhost:5000/uploads/${post.media}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n              children: post.postText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n              className: \"text-muted\",\n              children: new Date(post.createdAt).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No posts found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"KzPWmC35hufd2pMHSrSlYD0W/OI=\", false, function () {\n  return [useParams];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","Container","Row","Col","Card","Button","useParams","jsxDEV","_jsxDEV","Profile","_s","userId","user","setUser","posts","setPosts","error","setError","fetchUserAndPosts","token","localStorage","getItem","userResponse","fetch","method","headers","ok","Error","userData","json","postsResponse","postsData","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","md","Body","Title","name","Subtitle","email","variant","length","map","post","media","Img","src","Text","postText","Footer","Date","createdAt","toLocaleString","id","_c","$RefreshReg$"],"sources":["C:/Users/Alina/Desktop/twitter/twitter/src/Pages/profile.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst Profile = () => {\r\n  const { userId } = useParams(); // Get user ID from URL params\r\n  const [user, setUser] = useState(null);\r\n  const [posts, setPosts] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchUserAndPosts = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token'); // Get token from local storage\r\n\r\n        // Fetch user details\r\n        const userResponse = await fetch(`http://localhost:5000/api/user/${userId}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `${token}`, // Include token in request headers\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n\r\n        if (!userResponse.ok) {\r\n          throw new Error('Failed to fetch user details');\r\n        }\r\n        \r\n        const userData = await userResponse.json();\r\n        setUser(userData);\r\n\r\n        // Fetch user's posts\r\n        const postsResponse = await fetch(`http://localhost:5000/api/posts/${userId}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `${token}`, // Include token in request headers\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n\r\n        if (!postsResponse.ok) {\r\n          throw new Error('Failed to fetch posts');\r\n        }\r\n\r\n        const postsData = await postsResponse.json();\r\n        setPosts(postsData);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      }\r\n    };\r\n\r\n    fetchUserAndPosts();\r\n  }, [userId]);\r\n\r\n  if (error) {\r\n    return <div className=\"alert alert-danger\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <Container className=\"mt-4\">\r\n      {user && (\r\n        <Row>\r\n          <Col md={4}>\r\n            <Card>\r\n              <Card.Body>\r\n                <Card.Title>{user.name}</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">{user.email}</Card.Subtitle>\r\n                <Button variant=\"primary\">Follow</Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col md={8}>\r\n            {posts.length > 0 ? (\r\n              posts.map(post => (\r\n                <Card key={post.id} className=\"mb-3\">\r\n                  {post.media && <Card.Img variant=\"top\" src={`http://localhost:5000/uploads/${post.media}`} />}\r\n                  <Card.Body>\r\n                    <Card.Text>{post.postText}</Card.Text>\r\n                    <Card.Footer className=\"text-muted\">\r\n                      {new Date(post.createdAt).toLocaleString()}\r\n                    </Card.Footer>\r\n                  </Card.Body>\r\n                </Card>\r\n              ))\r\n            ) : (\r\n              <p>No posts found.</p>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}