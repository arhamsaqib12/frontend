{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alina\\\\Desktop\\\\twitter\\\\twitter\\\\src\\\\Pages\\\\tweets.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tweets = () => {\n  _s();\n  const [tweets, setTweets] = useState([]);\n  const [error, setError] = useState('');\n  const fetchTweets = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/posts', {\n        method: 'GET',\n        headers: {\n          'authorization': `${localStorage.getItem('token')}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Error fetching tweets: ${response.status}`);\n      }\n      const data = await response.json();\n      setTweets(data);\n    } catch (error) {\n      console.error('Error fetching tweets:', error);\n      setError(error.message);\n    }\n  };\n  useEffect(() => {\n    fetchTweets();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: tweets.map(tweet => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mt-0\",\n              children: [tweet.user.name, \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-muted\",\n                children: [\"@\", tweet.user.username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 56\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-1\",\n              children: tweet.postText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), tweet.media && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://localhost:5000/public/${tweet.media}`,\n              className: \"img-fluid rounded mt-2\",\n              alt: \"Tweet Media\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-muted\",\n              children: new Date(tweet.createdAt).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, tweet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Tweets, \"GpCxZzYL3xKG4IjeP+8/pYcaO38=\");\n_c = Tweets;\nexport default Tweets;\nvar _c;\n$RefreshReg$(_c, \"Tweets\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Tweets","_s","tweets","setTweets","error","setError","fetchTweets","response","fetch","method","headers","localStorage","getItem","ok","Error","status","data","json","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","tweet","user","name","username","postText","media","src","alt","Date","createdAt","toLocaleString","id","_c","$RefreshReg$"],"sources":["C:/Users/Alina/Desktop/twitter/twitter/src/Pages/tweets.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst Tweets = () => {\r\n  const [tweets, setTweets] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  const fetchTweets = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/posts', {\r\n        method: 'GET',\r\n        headers: {\r\n          'authorization': `${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Error fetching tweets: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      setTweets(data);\r\n    } catch (error) {\r\n      console.error('Error fetching tweets:', error);\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTweets();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      {error && <div className=\"alert alert-danger\">Error: {error}</div>}\r\n      <ul className=\"list-group\">\r\n        {tweets.map((tweet) => (\r\n          <li key={tweet.id} className=\"list-group-item\">\r\n            <div className=\"media\">\r\n              {/* <img\r\n                src={`http://localhost:5000/public/${tweet.user.profilePic}`}\r\n                className=\"mr-3 rounded-circle\"\r\n                alt=\"User\"\r\n                width=\"48\"\r\n                height=\"48\"\r\n              /> */}\r\n              <div className=\"media-body\">\r\n                <h5 className=\"mt-0\">{tweet.user.name} <small className=\"text-muted\">@{tweet.user.username}</small></h5>\r\n                <p className=\"mb-1\">{tweet.postText}</p>\r\n                {tweet.media && (\r\n                  <img\r\n                    src={`http://localhost:5000/public/${tweet.media}`}\r\n                    className=\"img-fluid rounded mt-2\"\r\n                    alt=\"Tweet Media\"\r\n                  />\r\n                )}\r\n                <small className=\"text-muted\">{new Date(tweet.createdAt).toLocaleString()}</small>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tweets;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}