{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alina\\\\Desktop\\\\twitter\\\\twitter\\\\src\\\\Pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    fetchTweets();\n  }, []);\n  const fetchTweets = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/posts');\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setTweets(data); // Assuming data is an array of tweets with createdAt, postText, and media (Blob)\n    } catch (error) {\n      console.error('Error fetching tweets:', error);\n    }\n  };\n  const renderMedia = blob => {\n    if (blob instanceof Blob) {\n      const url = URL.createObjectURL(blob);\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: url,\n        alt: \"Tweet Media\",\n        className: \"img-fluid rounded mb-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 14\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid g-0 mt-4 bg-black\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: tweets.map(tweet => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card mb-3 bg-black text-white rounded border border-gray\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://github.com/mdo.png\" // Replace with actual avatar URL if available in tweet data\n                ,\n                alt: \"Avatar\",\n                className: \"rounded-circle me-3\",\n                width: 50,\n                height: 50\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-title mb-0\",\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 21\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-white\",\n                  children: \"@handle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 21\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: tweet.postText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), \" \", tweet.media && renderMedia(tweet.media), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-gray\",\n              children: tweet.createdAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, tweet.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"tlPhWtKxaAnAviYMgoNvFaAwXFo=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Home","_s","tweets","setTweets","fetchTweets","response","fetch","ok","Error","status","data","json","error","console","renderMedia","blob","Blob","url","URL","createObjectURL","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","children","map","tweet","width","height","postText","media","createdAt","id","_c","$RefreshReg$"],"sources":["C:/Users/Alina/Desktop/twitter/twitter/src/Pages/Home.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\n\r\nexport default function Home() {\r\n  const [tweets, setTweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchTweets();\r\n  }, []);\r\n\r\n  const fetchTweets = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/posts');\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      setTweets(data); // Assuming data is an array of tweets with createdAt, postText, and media (Blob)\r\n    } catch (error) {\r\n      console.error('Error fetching tweets:', error);\r\n    }\r\n  };\r\n\r\n  const renderMedia = (blob) => {\r\n    if (blob instanceof Blob) {\r\n      const url = URL.createObjectURL(blob);\r\n      return <img src={url} alt=\"Tweet Media\" className=\"img-fluid rounded mb-3\" />;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid g-0 mt-4 bg-black\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-8\">\r\n          {tweets.map(tweet => (\r\n            <div key={tweet.id} className=\"card mb-3 bg-black text-white rounded border border-gray\">\r\n              <div className=\"card-body\">\r\n                <div className=\"d-flex align-items-center mb-3\">\r\n                  <img\r\n                    src=\"https://github.com/mdo.png\" // Replace with actual avatar URL if available in tweet data\r\n                    alt=\"Avatar\"\r\n                    className=\"rounded-circle me-3\"\r\n                    width={50}\r\n                    height={50}\r\n                  />\r\n                  <div>\r\n                    <h5 className=\"card-title mb-0\">Username</h5> {/* Replace with actual username if available in tweet data */}\r\n                    <span className=\"text-white\">@handle</span> {/* Replace with actual handle if available in tweet data */}\r\n                  </div>\r\n                </div>\r\n                <p className=\"card-text\">{tweet.postText}</p> {/* Display tweet text */}\r\n                {tweet.media && renderMedia(tweet.media)}\r\n                <div className=\"text-gray\">{tweet.createdAt}</div> {/* Display tweet creation date */}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}