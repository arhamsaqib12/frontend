{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alina\\\\Desktop\\\\twitter\\\\twitter\\\\src\\\\Pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [tweets, setTweets] = useState([]);\n  const [newPostText, setNewPostText] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    fetchTweets();\n  }, []);\n  const fetchTweets = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/posts');\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setTweets(data); // Assuming data is an array of tweets with createdAt, postText, and media (Blob)\n    } catch (error) {\n      console.error('Error fetching tweets:', error);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/api/posts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          postText: newPostText\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Error while creating post ${response.status}`);\n      }\n\n      // Clear input fields on successful submission\n      setNewPostText('');\n      setError('');\n      fetchTweets(); // Fetch updated tweets after posting\n    } catch (error) {\n      console.error('Error creating post:', error);\n      setError(error.message || 'An error occurred');\n    }\n  };\n  const renderMedia = blob => {\n    if (blob instanceof Blob) {\n      const url = URL.createObjectURL(blob);\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: url,\n        alt: \"Tweet Media\",\n        className: \"img-fluid mb-3\",\n        style: {\n          maxWidth: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container bg-black\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-3 bg-black text-white border border-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control border-0 bg-secondary text-white flex-grow-1\",\n              rows: \"4\",\n              placeholder: \"What's happening?\",\n              style: {\n                resize: 'none'\n              },\n              value: newPostText,\n              onChange: e => setNewPostText(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'white'\n            },\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between border-top border-white mt-3\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Tweet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: tweets.map(tweet => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card mb-3 bg-black text-white border border-white\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://github.com/mdo.png\" // Replace with actual avatar URL if available in tweet data\n                ,\n                alt: \"Avatar\",\n                className: \"me-3\",\n                width: 50,\n                height: 50,\n                style: {\n                  borderRadius: '50%',\n                  objectFit: 'cover'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-title mb-0\",\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 21\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-white\",\n                  children: \"@handle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: tweet.postText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), \" \", tweet.media && renderMedia(tweet.media), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-gray\",\n              children: tweet.createdAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, tweet.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"i2zHUlcjoBLd1K+i2i8l2+M3euw=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Home","_s","tweets","setTweets","newPostText","setNewPostText","error","setError","fetchTweets","response","fetch","ok","Error","status","data","json","console","handleSubmit","e","preventDefault","method","headers","body","JSON","stringify","postText","message","renderMedia","blob","Blob","url","URL","createObjectURL","src","alt","className","style","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","children","onSubmit","rows","placeholder","resize","value","onChange","target","required","color","type","map","tweet","width","height","borderRadius","objectFit","media","createdAt","id","_c","$RefreshReg$"],"sources":["C:/Users/Alina/Desktop/twitter/twitter/src/Pages/Home.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nexport default function Home() {\r\n  const [tweets, setTweets] = useState([]);\r\n  const [newPostText, setNewPostText] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchTweets();\r\n  }, []);\r\n\r\n  const fetchTweets = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/posts');\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      setTweets(data); // Assuming data is an array of tweets with createdAt, postText, and media (Blob)\r\n    } catch (error) {\r\n      console.error('Error fetching tweets:', error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/posts', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ postText: newPostText }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Error while creating post ${response.status}`);\r\n      }\r\n\r\n      // Clear input fields on successful submission\r\n      setNewPostText('');\r\n      setError('');\r\n      fetchTweets(); // Fetch updated tweets after posting\r\n    } catch (error) {\r\n      console.error('Error creating post:', error);\r\n      setError(error.message || 'An error occurred');\r\n    }\r\n  };\r\n\r\n  const renderMedia = (blob) => {\r\n    if (blob instanceof Blob) {\r\n      const url = URL.createObjectURL(blob);\r\n      return <img src={url} alt=\"Tweet Media\" className=\"img-fluid mb-3\" style={{ maxWidth: '100%' }} />;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container bg-black\">\r\n      {/* Create Post Form */}\r\n      <div className=\"card mb-3 bg-black text-white border border-white\">\r\n        <div className=\"card-body\">\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"d-flex\">\r\n              <textarea\r\n                className=\"form-control border-0 bg-secondary text-white flex-grow-1\"\r\n                rows=\"4\"\r\n                placeholder=\"What's happening?\"\r\n                style={{ resize: 'none' }}\r\n                value={newPostText}\r\n                onChange={(e) => setNewPostText(e.target.value)}\r\n                required\r\n              ></textarea>\r\n            </div>\r\n            {/* Display error message in white color */}\r\n            {error && <p style={{ color: 'white' }}>{error}</p>}\r\n            <div className=\"d-flex justify-content-between border-top border-white mt-3\">\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Tweet\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Display Tweets */}\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-8\">\r\n          {tweets.map(tweet => (\r\n            <div key={tweet.id} className=\"card mb-3 bg-black text-white border border-white\">\r\n              <div className=\"card-body\">\r\n                <div className=\"d-flex align-items-center mb-3\">\r\n                  <img\r\n                    src=\"https://github.com/mdo.png\" // Replace with actual avatar URL if available in tweet data\r\n                    alt=\"Avatar\"\r\n                    className=\"me-3\"\r\n                    width={50}\r\n                    height={50}\r\n                    style={{ borderRadius: '50%', objectFit: 'cover' }}\r\n                  />\r\n                  <div>\r\n                    <h5 className=\"card-title mb-0\">Username</h5> {/* Replace with actual username if available in tweet data */}\r\n                    <span className=\"text-white\">@handle</span> {/* Replace with actual handle if available in tweet data */}\r\n                  </div>\r\n                </div>\r\n                <p className=\"card-text\">{tweet.postText}</p> {/* Display tweet text */}\r\n                {tweet.media && renderMedia(tweet.media)}\r\n                <div className=\"text-gray\">{tweet.createdAt}</div> {/* Display tweet creation date */}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}