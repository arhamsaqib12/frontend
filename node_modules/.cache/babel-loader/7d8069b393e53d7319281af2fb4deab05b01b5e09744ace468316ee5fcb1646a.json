{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alina\\\\Desktop\\\\twitter\\\\twitter\\\\src\\\\Pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    fetchTweets();\n  }, []);\n  const fetchTweets = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/posts');\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setTweets(data); // Assuming data is an array of tweets\n    } catch (error) {\n      console.error('Error fetching tweets:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: tweets.map(tweet => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: tweet.author // Assuming tweet.author.avatar is the URL for author's avatar\n                ,\n                alt: \"Avatar\",\n                className: \"rounded-circle me-3\",\n                width: 50,\n                height: 50\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title mb-0\",\n                children: tweet.author.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-muted ms-2\",\n                children: [\"@\", tweet.author.handle]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 19\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: tweet.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this), \" \", tweet.media && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: tweet.media // Assuming tweet.media is the URL for media (image or video)\n              ,\n              alt: \"Tweet Media\",\n              className: \"img-fluid rounded mb-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-chat\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 21\n                }, this), \" \", tweet.comments.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-heart\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 21\n                }, this), \" \", tweet.likes]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-share\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 21\n                }, this), \" \", tweet.shares]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)\n        }, tweet.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"tlPhWtKxaAnAviYMgoNvFaAwXFo=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Home","_s","tweets","setTweets","fetchTweets","response","fetch","ok","Error","status","data","json","error","console","className","children","map","tweet","src","author","alt","width","height","fileName","_jsxFileName","lineNumber","columnNumber","username","handle","text","media","comments","length","likes","shares","id","_c","$RefreshReg$"],"sources":["C:/Users/Alina/Desktop/twitter/twitter/src/Pages/Home.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\n\r\nexport default function Home() {\r\n  const [tweets, setTweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchTweets();\r\n  }, []);\r\n\r\n  const fetchTweets = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/posts');\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      setTweets(data); // Assuming data is an array of tweets\r\n    } catch (error) {\r\n      console.error('Error fetching tweets:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-8\">\r\n          {tweets.map(tweet => (\r\n            <div key={tweet.id} className=\"card mb-3\">\r\n              <div className=\"card-body\">\r\n                <div className=\"d-flex align-items-center mb-3\">\r\n                  <img\r\n                    src={tweet.author} // Assuming tweet.author.avatar is the URL for author's avatar\r\n                    alt=\"Avatar\"\r\n                    className=\"rounded-circle me-3\"\r\n                    width={50}\r\n                    height={50}\r\n                  />\r\n                  <h5 className=\"card-title mb-0\">{tweet.author.username}</h5> {/* Username of the author */}\r\n                  <span className=\"text-muted ms-2\">@{tweet.author.handle}</span> {/* Handle of the author */}\r\n                </div>\r\n                <p className=\"card-text\">{tweet.text}</p> {/* Content of the tweet */}\r\n                {tweet.media && (\r\n                  <img\r\n                    src={tweet.media} // Assuming tweet.media is the URL for media (image or video)\r\n                    alt=\"Tweet Media\"\r\n                    className=\"img-fluid rounded mb-3\"\r\n                  />\r\n                )}\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <div>\r\n                    <i className=\"bi bi-chat\"></i> {tweet.comments.length}\r\n                  </div>\r\n                  <div>\r\n                    <i className=\"bi bi-heart\"></i> {tweet.likes}\r\n                  </div>\r\n                  <div>\r\n                    <i className=\"bi bi-share\"></i> {tweet.shares}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}