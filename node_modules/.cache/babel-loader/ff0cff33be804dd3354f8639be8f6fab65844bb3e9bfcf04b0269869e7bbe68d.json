{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alina\\\\Desktop\\\\twitter\\\\twitter\\\\src\\\\Pages\\\\UserSearch.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Modal, Button, Form, ListGroup } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserSearch = ({\n  show,\n  onHide,\n  onUserSelect\n}) => {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    if (searchQuery) {\n      fetch(`https://twit-backend-production.up.railway.app/api/posts/searchuser?query=${searchQuery}`, {\n        headers: {\n          'Authorization': `${localStorage.getItem('token')}`\n        }\n      }).then(response => response.json()).then(data => setUsers(data.users));\n    } else {\n      setUsers([]);\n    }\n  }, [searchQuery]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onHide,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Search Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        placeholder: \"Search users...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        className: \"mt-3\",\n        children: users.map(user => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          action: true,\n          onClick: () => onUserSelect(user),\n          children: user.name\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: onHide,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(UserSearch, \"2DtdB45ZyI61E04YCXqOyucLlV8=\");\n_c = UserSearch;\nexport default UserSearch;\nvar _c;\n$RefreshReg$(_c, \"UserSearch\");","map":{"version":3,"names":["React","useState","useEffect","Modal","Button","Form","ListGroup","jsxDEV","_jsxDEV","UserSearch","show","onHide","onUserSelect","_s","searchQuery","setSearchQuery","users","setUsers","fetch","headers","localStorage","getItem","then","response","json","data","centered","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","Control","type","value","onChange","e","target","placeholder","className","map","user","Item","action","onClick","name","id","Footer","variant","_c","$RefreshReg$"],"sources":["C:/Users/Alina/Desktop/twitter/twitter/src/Pages/UserSearch.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal, Button, Form, ListGroup } from 'react-bootstrap';\r\n\r\nconst UserSearch = ({ show, onHide, onUserSelect }) => {\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [users, setUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (searchQuery) {\r\n            fetch(`https://twit-backend-production.up.railway.app/api/posts/searchuser?query=${searchQuery}`, {\r\n                headers: { 'Authorization': `${localStorage.getItem('token')}` },\r\n              })\r\n                .then(response => response.json())\r\n                .then(data => setUsers(data.users));\r\n        } else {\r\n            setUsers([]);\r\n        }\r\n    }, [searchQuery]);\r\n\r\n    return (\r\n        <Modal show={show} onHide={onHide} centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Search Users</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    value={searchQuery}\r\n                    onChange={(e) => setSearchQuery(e.target.value)}\r\n                    placeholder=\"Search users...\"\r\n                />\r\n                <ListGroup className=\"mt-3\">\r\n                    {users.map(user => (\r\n                        <ListGroup.Item\r\n                            key={user.id}\r\n                            action\r\n                            onClick={() => onUserSelect(user)}\r\n                        >\r\n                            {user.name}\r\n                        </ListGroup.Item>\r\n                    ))}\r\n                </ListGroup>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={onHide}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default UserSearch;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}