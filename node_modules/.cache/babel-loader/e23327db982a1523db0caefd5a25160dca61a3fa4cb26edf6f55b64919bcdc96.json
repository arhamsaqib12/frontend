{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alina\\\\Desktop\\\\twitter\\\\twitter\\\\src\\\\Pages\\\\Tweet.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css'; // Import Bootstrap Icons\nimport Comment from './comment'; // Import the Comment component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SingleTweet = () => {\n  _s();\n  const {\n    tweetId\n  } = useParams(); // Get tweetId from URL parameters\n  const [tweet, setTweet] = useState(null);\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchTweet = async () => {\n      try {\n        console.log(`Fetching tweet with ID: ${tweetId}`); // Log tweetId\n        const response = await fetch(`/api/posts/tweet/${tweetId}`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `${localStorage.getItem('token')}` // Add Bearer prefix\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`Error fetching tweet: ${response.status}`);\n        }\n        const data = await response.json();\n        setTweet(data);\n        fetchUser(data.userId); // Fetch the user data based on tweet's userId\n      } catch (error) {\n        console.error('Error fetching tweet:', error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    const fetchUser = async userId => {\n      try {\n        console.log(`Fetching user with ID: ${userId}`); // Log userId\n        const response = await fetch(`http://localhost:5000/api/posts/user/${userId}`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `${localStorage.getItem('token')}` // Add Bearer prefix\n          }\n        });\n        if (response.ok) {\n          const userData = await response.json();\n          setUser(userData);\n        } else {\n          throw new Error(`Error fetching user: ${response.status}`);\n        }\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n        setError(error.message);\n      }\n    };\n    fetchTweet();\n  }, [tweetId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-info\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 45\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this), tweet && user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border border-secondary bg-black text-white p-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"py-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-secondary\",\n              children: [\"@\", user.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-muted\",\n              children: new Date(tweet.createdAt).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: tweet.postText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), tweet.media && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: tweet.media,\n            className: \"img-fluid\",\n            alt: \"Tweet Media\",\n            style: {\n              borderRadius: '20px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-lg text-light\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-heart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this), \" \", tweet.likesCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), tweet && /*#__PURE__*/_jsxDEV(Comment, {\n      postId: tweetId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(SingleTweet, \"NozPkxAwzL+/ernCxMODUeMAVI4=\", false, function () {\n  return [useParams];\n});\n_c = SingleTweet;\nexport default SingleTweet;\nvar _c;\n$RefreshReg$(_c, \"SingleTweet\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Comment","jsxDEV","_jsxDEV","SingleTweet","_s","tweetId","tweet","setTweet","user","setUser","error","setError","loading","setLoading","fetchTweet","console","log","response","fetch","method","headers","localStorage","getItem","ok","Error","status","data","json","fetchUser","userId","message","userData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","email","Date","createdAt","toLocaleString","postText","media","src","alt","style","borderRadius","likesCount","postId","_c","$RefreshReg$"],"sources":["C:/Users/Alina/Desktop/twitter/twitter/src/Pages/Tweet.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css'; // Import Bootstrap Icons\r\nimport Comment from './comment'; // Import the Comment component\r\n\r\nconst SingleTweet = () => {\r\n  const { tweetId } = useParams(); // Get tweetId from URL parameters\r\n  const [tweet, setTweet] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchTweet = async () => {\r\n      try {\r\n        console.log(`Fetching tweet with ID: ${tweetId}`); // Log tweetId\r\n        const response = await fetch(`/api/posts/tweet/${tweetId}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `${localStorage.getItem('token')}`, // Add Bearer prefix\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Error fetching tweet: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        setTweet(data);\r\n        fetchUser(data.userId); // Fetch the user data based on tweet's userId\r\n      } catch (error) {\r\n        console.error('Error fetching tweet:', error);\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    const fetchUser = async (userId) => {\r\n      try {\r\n        console.log(`Fetching user with ID: ${userId}`); // Log userId\r\n        const response = await fetch(`http://localhost:5000/api/posts/user/${userId}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `${localStorage.getItem('token')}`, // Add Bearer prefix\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const userData = await response.json();\r\n          setUser(userData);\r\n        } else {\r\n          throw new Error(`Error fetching user: ${response.status}`);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching user data:', error);\r\n        setError(error.message);\r\n      }\r\n    };\r\n\r\n    fetchTweet();\r\n  }, [tweetId]);\r\n\r\n  if (loading) {\r\n    return <div className=\"container-fluid\"><div className=\"alert alert-info\">Loading...</div></div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      {error && <div className=\"alert alert-danger\">Error: {error}</div>}\r\n      {tweet && user && (\r\n        <div className=\"border border-secondary bg-black text-white p-3\">\r\n          <div className=\"media\">\r\n            <div className=\"media-body\">\r\n              <h5 className=\"py-2\">\r\n                <span>{user.name}</span>\r\n                <small className=\"text-secondary\">@{user.email}</small>\r\n                <small className=\"text-muted\">{new Date(tweet.createdAt).toLocaleString()}</small>\r\n              </h5>\r\n              <p>{tweet.postText}</p>\r\n              {tweet.media && (\r\n                <img\r\n                  src={tweet.media}\r\n                  className=\"img-fluid\"\r\n                  alt=\"Tweet Media\"\r\n                  style={{ borderRadius: '20px' }}\r\n                />\r\n              )}\r\n              <div className=\"pt-2\">\r\n                <button className=\"btn btn-lg text-light\">\r\n                  <i className=\"bi bi-heart\"></i> {tweet.likesCount}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {/* Comment Section */}\r\n      {tweet && <Comment postId={tweetId} />} {/* Pass tweetId as postId */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleTweet;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}