{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault();\n  const token = localStorage.getItem('token');\n  if (!token) {\n    setError(\"No token found\");\n    return;\n  }\n  const formData = new FormData();\n  formData.append('postText', data.postText);\n  if (data.media) {\n    formData.append('media', data.media); // This will handle the image file\n  }\n  try {\n    const response = await fetch('http://localhost:5000/api/posts', {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": `Bearer ${token}` // Make sure the token is used correctly\n      },\n      body: formData // Directly send the FormData object\n    });\n    if (!response.ok) {\n      throw new Error(`Error while creating post: ${response.status}`);\n    }\n\n    // Handle hashtags separately if required\n    const text = extractHashtags(data.postText);\n    if (text.length > 0) {\n      const hashtagResponse = await fetch('https://twit-backend-production.up.railway.app/api/hashtag/', {\n        method: \"POST\",\n        headers: {\n          \"Authorization\": `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          text\n        })\n      });\n      if (!hashtagResponse.ok) {\n        throw new Error(`Error while posting hashtags: ${hashtagResponse.status}`);\n      }\n    }\n    setData({\n      postText: '',\n      media: null\n    });\n    setError('');\n    handleClose();\n  } catch (error) {\n    console.error(\"Error creating post:\", error);\n    setError(error.message || \"An error occurred\");\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","token","localStorage","getItem","setError","formData","FormData","append","data","postText","media","response","fetch","method","headers","body","ok","Error","status","text","extractHashtags","length","hashtagResponse","JSON","stringify","setData","handleClose","error","console","message"],"sources":["C:/Users/Alina/Desktop/twitter/twitter/src/Components/Post.jsx"],"sourcesContent":["const handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n  const token = localStorage.getItem('token');\r\n  if (!token) {\r\n    setError(\"No token found\");\r\n    return;\r\n  }\r\n\r\n  const formData = new FormData();\r\n  formData.append('postText', data.postText);\r\n  if (data.media) {\r\n    formData.append('media', data.media); // This will handle the image file\r\n  }\r\n\r\n  try {\r\n    const response = await fetch('http://localhost:5000/api/posts', {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Authorization\": `Bearer ${token}`, // Make sure the token is used correctly\r\n      },\r\n      body: formData, // Directly send the FormData object\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Error while creating post: ${response.status}`);\r\n    }\r\n\r\n    // Handle hashtags separately if required\r\n    const text = extractHashtags(data.postText);\r\n    if (text.length > 0) {\r\n      const hashtagResponse = await fetch('https://twit-backend-production.up.railway.app/api/hashtag/', {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Authorization\": `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ text }),\r\n      });\r\n\r\n      if (!hashtagResponse.ok) {\r\n        throw new Error(`Error while posting hashtags: ${hashtagResponse.status}`);\r\n      }\r\n    }\r\n\r\n    setData({ postText: '', media: null });\r\n    setError('');\r\n    handleClose();\r\n  } catch (error) {\r\n    console.error(\"Error creating post:\", error);\r\n    setError(error.message || \"An error occurred\");\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACF,KAAK,EAAE;IACVG,QAAQ,CAAC,gBAAgB,CAAC;IAC1B;EACF;EAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEC,IAAI,CAACC,QAAQ,CAAC;EAC1C,IAAID,IAAI,CAACE,KAAK,EAAE;IACdL,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEC,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC;EACxC;EAEA,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;MAC9DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,eAAe,EAAE,UAAUb,KAAK,EAAE,CAAE;MACtC,CAAC;MACDc,IAAI,EAAEV,QAAQ,CAAE;IAClB,CAAC,CAAC;IAEF,IAAI,CAACM,QAAQ,CAACK,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,8BAA8BN,QAAQ,CAACO,MAAM,EAAE,CAAC;IAClE;;IAEA;IACA,MAAMC,IAAI,GAAGC,eAAe,CAACZ,IAAI,CAACC,QAAQ,CAAC;IAC3C,IAAIU,IAAI,CAACE,MAAM,GAAG,CAAC,EAAE;MACnB,MAAMC,eAAe,GAAG,MAAMV,KAAK,CAAC,6DAA6D,EAAE;QACjGC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,eAAe,EAAE,UAAUb,KAAK,EAAE;UAClC,cAAc,EAAE;QAClB,CAAC;QACDc,IAAI,EAAEQ,IAAI,CAACC,SAAS,CAAC;UAAEL;QAAK,CAAC;MAC/B,CAAC,CAAC;MAEF,IAAI,CAACG,eAAe,CAACN,EAAE,EAAE;QACvB,MAAM,IAAIC,KAAK,CAAC,iCAAiCK,eAAe,CAACJ,MAAM,EAAE,CAAC;MAC5E;IACF;IAEAO,OAAO,CAAC;MAAEhB,QAAQ,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACtCN,QAAQ,CAAC,EAAE,CAAC;IACZsB,WAAW,CAAC,CAAC;EACf,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5CvB,QAAQ,CAACuB,KAAK,CAACE,OAAO,IAAI,mBAAmB,CAAC;EAChD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}